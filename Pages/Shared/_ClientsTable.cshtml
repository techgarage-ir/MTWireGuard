@using MTWireGuard.Models.Mikrotik
@model List<WGPeerViewModel>

@foreach (var user in Model)
{
    <tr class="align-middle" data-id="@user.Id">
        <td class="text-center">
            <span class="text-medium-emphasis">#@user.Id</span>
        </td>
        <td>
            <div>@user.Name</div>
        </td>
        <td>
            @if (user.Interface.StartsWith('*'))
            {
                <div class="text-danger fst-italic">@user.Interface</div>
            }
            else
            {
                <div>@user.Interface</div>
            }
        </td>
        <td>
            <div>@user.Address</div>
            @if (!user.CurrentAddress.EndsWith(":0"))
            {
                <div class="small text-medium-emphasis">@user.CurrentAddress</div>
            }
        </td>
        <td>
            <div class="text-truncate">@user.PublicKey</div>
        </td>
        <td>
            <div>
                <svg class="icon">
                    <use xlink:href="vendors/coreui/icons/svg/free.svg#cil-data-transfer-up"></use>
                </svg>
                @user.Upload / @user.Download
                <svg class="icon">
                    <use xlink:href="vendors/coreui/icons/svg/free.svg#cil-data-transfer-down"></use>
                </svg>
            </div>
        </td>
        <td>
            <div class="row">
                @if (!user.IsEnabled)
                {
                    <span class="col badge rounded-pill text-bg-danger">Disabled</span>
                }
                else
                {
                    <span class="col badge rounded-pill text-bg-success">Enabled</span>
                }
                @if (user.IsDifferent)
                {
                    <span class="col badge rounded-pill text-bg-danger mx-md-1">Not Synced</span>
                }
                else
                {
                    <span class="col badge rounded-pill text-bg-success mx-md-1">Synced</span>
                }
                @if (user.CurrentAddress.EndsWith(":0"))
                {
                    <span class="col badge rounded-pill text-bg-danger">Offline</span>
                }
                else
                {
                    <span class="col badge rounded-pill text-bg-success">Online</span>
                }
            </div>
        </td>
        <td>
            <div class="dropdown position-static">
                <button class="btn btn-transparent p-0" type="button" data-coreui-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <svg class="icon">
                        <use xlink:href="vendors/coreui/icons/svg/free.svg#cil-options"></use>
                    </svg>
                </button>
                <div class="dropdown-menu dropdown-menu-end">
                    @if (user.IsDifferent)
                    {
                        <button class="dropdown-item sync-btn" data-coreui-toggle="modal" data-coreui-target="#SyncModal">Sync</button>
                    }
                    <button class="dropdown-item" data-coreui-toggle="modal" data-coreui-target="#QRModal">QR</button>
                    <a class="dropdown-item" asp-page="Clients" asp-page-handler="DownloadTunnel" asp-route-id="@user.Id">Download</a>
                    <button class="dropdown-item update-btn" data-coreui-toggle="modal" data-coreui-target="#EditModal">Edit</button>
                    @{
                        var enabled = user.IsEnabled;
                        string enableORdisable = enabled ? "Disable" : "Enable";
                    }
                    <a class="dropdown-item" asp-page="Clients" asp-page-handler="Enable" asp-route-ID="@user.Id" asp-route-IsEnabled="@enabled" data-target="_self" onclick="ddBtnClick(event);">@enableORdisable</a>
                    <button class="dropdown-item delete-btn text-danger" data-coreui-toggle="modal" data-coreui-target="#DeleteModal">Delete</button>
                </div>
            </div>
        </td>
    </tr>
}